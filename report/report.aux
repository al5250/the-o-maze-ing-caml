\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Overview}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Code Structure}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Running the Program}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces An example of a randomly generated $2^4$ x $2^4$ maze.}}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The solution to the above maze.}}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Maze Generation}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Recursive-Division Algorithm}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces A cell is divided into four smaller cells. Only one inner side is kept closed.}}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces An open side is divided into 2 smaller sides - one closed and one open (see red).}}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Design \& Implementation}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces The abstract representation of mazes in our program. Each color is a different cell. For example, the green cell is \texttt  {\{pos = (n/2, 0); length = n/2; left = true; bottom = false}\}.}}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Functions Explained}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}Maze}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.2}Cell}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Rendering Graphics}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Maze Solving}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Recursive-Backtracking Algorithm}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Functions Explained}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Rendering Graphics}{7}}
