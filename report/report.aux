\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Overview}{2}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Code Structure}{2}{subsection.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Running the Program}{2}{subsection.1.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces An example of a randomly generated $2^4$ x $2^4$ maze.}}{3}{figure.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The solution to the above maze.}}{3}{figure.2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Maze Generation}{3}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Recursive-Division Algorithm}{3}{subsection.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces A cell is divided into four smaller cells. Only one inner side is kept closed.}}{4}{figure.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces An open side is divided into 2 smaller sides - one closed and one open (see red).}}{4}{figure.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Design \& Implementation}{5}{subsection.2.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces The abstract representation of mazes in our program. Each color is a different cell. For example, the green cell is \texttt  {\{pos = (n/2, 0); length = n/2; left = true; bottom = false}\}.}}{6}{figure.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Functions Explained}{6}{subsection.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Rendering Graphics}{7}{subsection.2.4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Maze Solving}{7}{section.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Recursive-Backtracking Algorithm}{7}{subsection.3.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces An example of the tree representation of a perfect maze. The goal is to find a path from the red vertex to the blue vertex.}}{8}{figure.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Design \& Implementation}{8}{subsection.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Functions Explained}{9}{subsection.3.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Rendering Graphics}{10}{subsection.3.4}}
